{"ast":null,"code":"var _jsxFileName = \"/home/admin1/mayank/weather-forecasts/src/Components/CurrentWeather.jsx\";\nimport \"./CurrentWeather.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import conditonsData from \"../conditionsData\";\n\n// Function to find the correct icon for the current weather condition\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst findIcon = condition => {\n  let icon;\n  switch (condition) {\n    case \"Clear\":\n      icon = \"fa-cloud\";\n      break;\n    case \"Sunny\":\n      icon = \"fa-sun\";\n      break;\n    case \"Mist\":\n      icon = \"fa-cloud-meatball\";\n      break;\n    case \"Cloudy\":\n      icon = \"fa-cloud\";\n      break;\n    case \"Partly cloudy\":\n      icon = \"fa-cloud-sun\";\n      break;\n    case \"Overcast\":\n      icon = \"fa-smog\";\n      break;\n    case \"Blizzard\":\n      icon = \"fa-meteor\";\n      break;\n    case \"Fog\":\n      icon = \"fa-smog\";\n      break;\n    case \"Light rain\":\n      icon = \"fa-cloud-rain\";\n      break;\n    case \"Medium rain\":\n      icon = \"fa-cloud-rain\";\n      break;\n    case \"Heavy rain\":\n      icon = \"fa-cloud-showers-heavy\";\n      break;\n    case \"Light snow\":\n      icon = \"fa-snowflake\";\n      break;\n    case \"Medium snow\":\n      icon = \"fa-snowflake\";\n      break;\n    case \"Heavy snow\":\n      icon = \"fa-icicles\";\n      break;\n    default:\n      icon = \"fa-cloud\";\n  }\n  return icon;\n};\n\n// Function to find the correct icon for the current weather condition\n// const findIcon = (condition) => {\n//   const index = conditonsData.findIndex((item) => item.day === condition);\n//   return conditonsData[index].icon;\n// };\n\nconst CurrentWeather = ({\n  weatherData\n}) => {\n  const condition = weatherData === null || weatherData === void 0 ? void 0 : weatherData.text;\n\n  // Format the time and date\n  const time = new Date().toLocaleTimeString(\"en-us\", {\n    hour: \"numeric\",\n    minute: \"numeric\",\n    hour12: true\n  });\n  const date = new Date().toLocaleDateString(\"en-us\", {\n    weekday: \"long\",\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"current\",\n    children: !(weatherData !== null && weatherData !== void 0 && weatherData.temp) ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Please select location to search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"current-temp\",\n        children: [weatherData === null || weatherData === void 0 ? void 0 : weatherData.temp, /*#__PURE__*/_jsxDEV(\"sup\", {\n          children: \"\\xB0C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-date\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"location\",\n          children: weatherData === null || weatherData === void 0 ? void 0 : weatherData.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"current-date\",\n          children: [time, \" - \", date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-weather\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: `fa-solid ${findIcon(condition)}`,\n          className: \"current-weather__icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"current-weather__text\",\n          children: weatherData === null || weatherData === void 0 ? void 0 : weatherData.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_c = CurrentWeather;\nexport { CurrentWeather, findIcon };\nvar _c;\n$RefreshReg$(_c, \"CurrentWeather\");","map":{"version":3,"names":["FontAwesomeIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","findIcon","condition","icon","CurrentWeather","weatherData","text","time","Date","toLocaleTimeString","hour","minute","hour12","date","toLocaleDateString","weekday","year","month","day","className","children","temp","fileName","_jsxFileName","lineNumber","columnNumber","location","_c","$RefreshReg$"],"sources":["/home/admin1/mayank/weather-forecasts/src/Components/CurrentWeather.jsx"],"sourcesContent":["import \"./CurrentWeather.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import conditonsData from \"../conditionsData\";\n\n// Function to find the correct icon for the current weather condition\nconst findIcon = (condition) => {\n  let icon;\n  switch (condition) {\n    case \"Clear\":\n      icon = \"fa-cloud\";\n      break;\n    case \"Sunny\":\n      icon = \"fa-sun\";\n      break;\n    case \"Mist\":\n      icon = \"fa-cloud-meatball\";\n      break;\n    case \"Cloudy\":\n      icon = \"fa-cloud\";\n      break;\n    case \"Partly cloudy\":\n      icon = \"fa-cloud-sun\";\n      break;\n    case \"Overcast\":\n      icon = \"fa-smog\";\n      break;\n    case \"Blizzard\":\n      icon = \"fa-meteor\";\n      break;\n    case \"Fog\":\n      icon = \"fa-smog\";\n      break;\n    case \"Light rain\":\n      icon = \"fa-cloud-rain\";\n      break;\n    case \"Medium rain\":\n      icon = \"fa-cloud-rain\";\n      break;\n    case \"Heavy rain\":\n      icon = \"fa-cloud-showers-heavy\";\n      break;\n    case \"Light snow\":\n      icon = \"fa-snowflake\";\n      break;\n    case \"Medium snow\":\n      icon = \"fa-snowflake\";\n      break;\n    case \"Heavy snow\":\n      icon = \"fa-icicles\";\n      break;\n    default:\n      icon = \"fa-cloud\";\n  }\n  return icon;\n};\n\n// Function to find the correct icon for the current weather condition\n// const findIcon = (condition) => {\n//   const index = conditonsData.findIndex((item) => item.day === condition);\n//   return conditonsData[index].icon;\n// };\n\nconst CurrentWeather = ({ weatherData }) => {\n  const condition = weatherData?.text;\n\n  // Format the time and date\n  const time = new Date().toLocaleTimeString(\"en-us\", {\n    hour: \"numeric\",\n    minute: \"numeric\",\n    hour12: true,\n  });\n\n  const date = new Date().toLocaleDateString(\"en-us\", {\n    weekday: \"long\",\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n  });\n\n  return (\n    <div className=\"current\">\n      {!weatherData?.temp ? <h2>Please select location to search</h2> : <>\n        <h1 className=\"current-temp\">\n          {weatherData?.temp}\n          <sup>Â°C</sup>\n        </h1>\n        <div className=\"location-date\">\n          <h2 className=\"location\">{weatherData?.location}</h2>\n          <h3 className=\"current-date\">\n            {time} - {date}\n          </h3>\n        </div>\n        <div className=\"current-weather\">\n          <FontAwesomeIcon\n            icon={`fa-solid ${findIcon(condition)}`}\n            className=\"current-weather__icon\"\n          />\n          <h3 className=\"current-weather__text\">{weatherData?.text}</h3>\n        </div>\n      </>}\n    </div>\n  );\n};\n\nexport { CurrentWeather, findIcon };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}