{"ast":null,"code":"var _jsxFileName = \"/home/admin1/mayank/weather-forecasts/src/Components/Days/index.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./module.days.css\";\nimport Forecast from \"../Forecast\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Days = () => {\n  _s();\n  var _location$state, _location$state2;\n  const findIcon = condition => {\n    let icon;\n    switch (condition) {\n      case \"Clear\":\n        icon = \"fa-cloud\";\n        break;\n      case \"Sunny\":\n        icon = \"fa-sun\";\n        break;\n      case \"Mist\":\n        icon = \"fa-cloud-meatball\";\n        break;\n      case \"Cloudy\":\n        icon = \"fa-cloud\";\n        break;\n      case \"Partly cloudy\":\n        icon = \"fa-cloud-sun\";\n        break;\n      case \"Overcast\":\n        icon = \"fa-smog\";\n        break;\n      case \"Blizzard\":\n        icon = \"fa-meteor\";\n        break;\n      case \"Fog\":\n        icon = \"fa-smog\";\n        break;\n      case \"Light rain\":\n        icon = \"fa-cloud-rain\";\n        break;\n      case \"Medium rain\":\n        icon = \"fa-cloud-rain\";\n        break;\n      case \"Heavy rain\":\n        icon = \"fa-cloud-showers-heavy\";\n        break;\n      case \"Light snow\":\n        icon = \"fa-snowflake\";\n        break;\n      case \"Medium snow\":\n        icon = \"fa-snowflake\";\n        break;\n      case \"Heavy snow\":\n        icon = \"fa-icicles\";\n        break;\n      default:\n        icon = \"fa-cloud\";\n    }\n    return icon;\n  };\n  const dateToWords = date => {\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    date = new Date(date);\n    const month = months[date.getMonth()];\n    const dateNum = date.getDate();\n    return `${month} ${dateNum}`;\n  };\n  const location = useLocation();\n  let datas = location !== null && location !== void 0 && (_location$state = location.state) !== null && _location$state !== void 0 && _location$state.data ? location === null || location === void 0 ? void 0 : (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.data : [];\n  console.log(datas);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainBox\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"currentt\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"current-temp\",\n        children: /*#__PURE__*/_jsxDEV(\"sup\", {\n          children: \"7 days forecast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(Days, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = Days;\nexport default Days;\nvar _c;\n$RefreshReg$(_c, \"Days\");","map":{"version":3,"names":["React","Forecast","useLocation","jsxDEV","_jsxDEV","Days","_s","_location$state","_location$state2","findIcon","condition","icon","dateToWords","date","months","Date","month","getMonth","dateNum","getDate","location","datas","state","data","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/admin1/mayank/weather-forecasts/src/Components/Days/index.jsx"],"sourcesContent":["import React from \"react\";\nimport \"./module.days.css\";\nimport Forecast from \"../Forecast\";\nimport { useLocation } from \"react-router-dom\";\n\nconst Days = () => {\n  const findIcon = (condition) => {\n    let icon;\n    switch (condition) {\n      case \"Clear\":\n        icon = \"fa-cloud\";\n        break;\n      case \"Sunny\":\n        icon = \"fa-sun\";\n        break;\n      case \"Mist\":\n        icon = \"fa-cloud-meatball\";\n        break;\n      case \"Cloudy\":\n        icon = \"fa-cloud\";\n        break;\n      case \"Partly cloudy\":\n        icon = \"fa-cloud-sun\";\n        break;\n      case \"Overcast\":\n        icon = \"fa-smog\";\n        break;\n      case \"Blizzard\":\n        icon = \"fa-meteor\";\n        break;\n      case \"Fog\":\n        icon = \"fa-smog\";\n        break;\n      case \"Light rain\":\n        icon = \"fa-cloud-rain\";\n        break;\n      case \"Medium rain\":\n        icon = \"fa-cloud-rain\";\n        break;\n      case \"Heavy rain\":\n        icon = \"fa-cloud-showers-heavy\";\n        break;\n      case \"Light snow\":\n        icon = \"fa-snowflake\";\n        break;\n      case \"Medium snow\":\n        icon = \"fa-snowflake\";\n        break;\n      case \"Heavy snow\":\n        icon = \"fa-icicles\";\n        break;\n      default:\n        icon = \"fa-cloud\";\n    }\n    return icon;\n  };\n  const dateToWords = (date) => {\n    const months = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ];\n\n    date = new Date(date);\n    const month = months[date.getMonth()];\n    const dateNum = date.getDate();\n\n    return `${month} ${dateNum}`;\n  };\n\n  const location = useLocation();\n\n  let datas = location?.state?.data ? location?.state?.data : [];\n\n  console.log(datas)\n\n  return (\n    <div className=\"mainBox\">\n      <div className=\"currentt\">\n        <h1 className=\"current-temp\">\n          {/* {weatherData?.temp} */}\n          <sup>7 days forecast</sup>\n        </h1>\n\n        {/* {datas?.map((day, i) => {\n          return (\n            i < 3 && (\n              <Forecast\n                key={day.date}\n                date={dateToWords(day.date)}\n                icon={findIcon(day.day?.condition?.text)}\n                value={day.day?.avghumidity}\n              />\n            )\n          );\n        })} */}\n      </div>\n    </div>\n  );\n};\n\nexport default Days;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}